======================================================
Filename: script4.txt
Running Test: ClassD
Recursive: true
CLASS
Class:  ClassD
SUPERCLASS -> Recursively Inspect
SuperClass: java.lang.Object
    CLASS
    Class:  java.lang.Object
    SuperClass: NONE
    INTERFACES:(class java.lang.Object)
    Interfaces-> NONE
    CONSTRUCTORS( class java.lang.Object )
    Constructors->
     Constructors:  
      Name:  java.lang.Object
      Exceptions-> None 
      Parameter types: 
      Modifiers:  public
    METHODS( class java.lang.Object )
    Methods->
     METHOD
      Name:  finalize
      Exceptions->
      class java.lang.Throwable
      Parameter types-> NONE
      Return type:  void
      Modifiers:  protected
     METHOD
      Name:  wait
      Exceptions->
      class java.lang.InterruptedException
      Parameter types-> 
      long
      int
      Return type:  void
      Modifiers:  public final
     METHOD
      Name:  wait
      Exceptions->
      class java.lang.InterruptedException
      Parameter types-> NONE
      Return type:  void
      Modifiers:  public final
     METHOD
      Name:  wait
      Exceptions->
      class java.lang.InterruptedException
      Parameter types-> 
      long
      Return type:  void
      Modifiers:  public final native
     METHOD
      Name:  equals
      Exceptions->NONE
      Parameter types-> 
      class java.lang.Object
      Return type:  boolean
      Modifiers:  public
     METHOD
      Name:  toString
      Exceptions->NONE
      Parameter types-> NONE
      Return type:  class java.lang.String
      Modifiers:  public
     METHOD
      Name:  hashCode
      Exceptions->NONE
      Parameter types-> NONE
      Return type:  int
      Modifiers:  public native
     METHOD
      Name:  getClass
      Exceptions->NONE
      Parameter types-> NONE
      Return type:  class java.lang.Class
      Modifiers:  public final native
     METHOD
      Name:  clone
      Exceptions->
      class java.lang.CloneNotSupportedException
      Parameter types-> NONE
      Return type:  class java.lang.Object
      Modifiers:  protected native
     METHOD
      Name:  notify
      Exceptions->NONE
      Parameter types-> NONE
      Return type:  void
      Modifiers:  public final native
     METHOD
      Name:  notifyAll
      Exceptions->NONE
      Parameter types-> NONE
      Return type:  void
      Modifiers:  public final native
    FIELDS( class java.lang.Object )
    Fields->None
=============Inspect finish==============
INTERFACES:(class ClassD)
Interfaces-> NONE
CONSTRUCTORS( class ClassD )
Constructors->
 Constructors:  
  Name:  ClassD
  Exceptions-> None 
  Parameter types: 
  Modifiers:  public
 Constructors:  
  Name:  ClassD
  Exceptions-> None 
  Parameter types: 
  int
  Modifiers:  public
METHODS( class ClassD )
Methods->
 METHOD
  Name:  toString
  Exceptions->NONE
  Parameter types-> NONE
  Return type:  class java.lang.String
  Modifiers:  public
 METHOD
  Name:  getVal3
  Exceptions->NONE
  Parameter types-> NONE
  Return type:  int
  Modifiers:  public
FIELDS( class ClassD )
Fields->
 FIELD
  Name:  val
  Type:  class ClassA
  Modifiers:  private
    CLASS
    Class:  java.lang.reflect.Field
    SUPERCLASS -> Recursively Inspect
    SuperClass: java.lang.reflect.AccessibleObject
        CLASS
        Class:  java.lang.reflect.AccessibleObject
        SUPERCLASS -> Recursively Inspect
        SuperClass: java.lang.Object
            CLASS
            Class:  java.lang.Object
            SuperClass: NONE
            INTERFACES:(class java.lang.Object)
            Interfaces-> NONE
            CONSTRUCTORS( class java.lang.Object )
            Constructors->
             Constructors:  
              Name:  java.lang.Object
              Exceptions-> None 
              Parameter types: 
              Modifiers:  public
            METHODS( class java.lang.Object )
            Methods->
             METHOD
              Name:  finalize
              Exceptions->
              class java.lang.Throwable
              Parameter types-> NONE
              Return type:  void
              Modifiers:  protected
             METHOD
              Name:  wait
              Exceptions->
              class java.lang.InterruptedException
              Parameter types-> 
              long
              int
              Return type:  void
              Modifiers:  public final
             METHOD
              Name:  wait
              Exceptions->
              class java.lang.InterruptedException
              Parameter types-> NONE
              Return type:  void
              Modifiers:  public final
             METHOD
              Name:  wait
              Exceptions->
              class java.lang.InterruptedException
              Parameter types-> 
              long
              Return type:  void
              Modifiers:  public final native
             METHOD
              Name:  equals
              Exceptions->NONE
              Parameter types-> 
              class java.lang.Object
              Return type:  boolean
              Modifiers:  public
             METHOD
              Name:  toString
              Exceptions->NONE
              Parameter types-> NONE
              Return type:  class java.lang.String
              Modifiers:  public
             METHOD
              Name:  hashCode
              Exceptions->NONE
              Parameter types-> NONE
              Return type:  int
              Modifiers:  public native
             METHOD
              Name:  getClass
              Exceptions->NONE
              Parameter types-> NONE
              Return type:  class java.lang.Class
              Modifiers:  public final native
             METHOD
              Name:  clone
              Exceptions->
              class java.lang.CloneNotSupportedException
              Parameter types-> NONE
              Return type:  class java.lang.Object
              Modifiers:  protected native
             METHOD
              Name:  notify
              Exceptions->NONE
              Parameter types-> NONE
              Return type:  void
              Modifiers:  public final native
             METHOD
              Name:  notifyAll
              Exceptions->NONE
              Parameter types-> NONE
              Return type:  void
              Modifiers:  public final native
            FIELDS( class java.lang.Object )
            Fields->None
=============Inspect finish==============
        INTERFACES:(class java.lang.reflect.AccessibleObject)
        Interfaces-> 
        INTERFACE -> Recursively Inspect
        interface java.lang.reflect.AnnotatedElement
            CLASS
            Class:  java.lang.reflect.AnnotatedElement
            INTERFACES:(interface java.lang.reflect.AnnotatedElement)
            Interfaces-> NONE
            CONSTRUCTORS( interface java.lang.reflect.AnnotatedElement )
            Constructors->NONE
            METHODS( interface java.lang.reflect.AnnotatedElement )
            Methods->
             METHOD
              Name:  isAnnotationPresent
              Exceptions->NONE
              Parameter types-> 
              class java.lang.Class
              Return type:  boolean
              Modifiers:  public
             METHOD
              Name:  getAnnotation
              Exceptions->NONE
              Parameter types-> 
              class java.lang.Class
              Return type:  interface java.lang.annotation.Annotation
              Modifiers:  public abstract
             METHOD
              Name:  getAnnotationsByType
              Exceptions->NONE
              Parameter types-> 
              class java.lang.Class
              Return type:  class [Ljava.lang.annotation.Annotation;
              Modifiers:  public
             METHOD
              Name:  getAnnotations
              Exceptions->NONE
              Parameter types-> NONE
              Return type:  class [Ljava.lang.annotation.Annotation;
              Modifiers:  public abstract
             METHOD
              Name:  getDeclaredAnnotation
              Exceptions->NONE
              Parameter types-> 
              class java.lang.Class
              Return type:  interface java.lang.annotation.Annotation
              Modifiers:  public
             METHOD
              Name:  getDeclaredAnnotationsByType
              Exceptions->NONE
              Parameter types-> 
              class java.lang.Class
              Return type:  class [Ljava.lang.annotation.Annotation;
              Modifiers:  public
             METHOD
              Name:  getDeclaredAnnotations
              Exceptions->NONE
              Parameter types-> NONE
              Return type:  class [Ljava.lang.annotation.Annotation;
              Modifiers:  public abstract
             METHOD
              Name:  lambda$getDeclaredAnnotationsByType$0
              Exceptions->NONE
              Parameter types-> 
              interface java.lang.annotation.Annotation
              interface java.lang.annotation.Annotation
              Return type:  interface java.lang.annotation.Annotation
              Modifiers:  private static
            FIELDS( interface java.lang.reflect.AnnotatedElement )
            Fields->None
=============Inspect finish==============
        CONSTRUCTORS( class java.lang.reflect.AccessibleObject )
        Constructors->
         Constructors:  
          Name:  java.lang.reflect.AccessibleObject
          Exceptions-> None 
          Parameter types: 
          Modifiers:  protected
        METHODS( class java.lang.reflect.AccessibleObject )
        Methods->
         METHOD
          Name:  checkPermission
          Exceptions->NONE
          Parameter types-> NONE
          Return type:  void
          Modifiers:  static
         METHOD
          Name:  isAnnotationPresent
          Exceptions->NONE
          Parameter types-> 
          class java.lang.Class
          Return type:  boolean
          Modifiers:  public
         METHOD
          Name:  getAnnotation
          Exceptions->NONE
          Parameter types-> 
          class java.lang.Class
          Return type:  interface java.lang.annotation.Annotation
          Modifiers:  public
         METHOD
          Name:  getAnnotationsByType
          Exceptions->NONE
          Parameter types-> 
          class java.lang.Class
          Return type:  class [Ljava.lang.annotation.Annotation;
          Modifiers:  public
         METHOD
          Name:  getAnnotations
          Exceptions->NONE
          Parameter types-> NONE
          Return type:  class [Ljava.lang.annotation.Annotation;
          Modifiers:  public
         METHOD
          Name:  getDeclaredAnnotation
          Exceptions->NONE
          Parameter types-> 
          class java.lang.Class
          Return type:  interface java.lang.annotation.Annotation
          Modifiers:  public
         METHOD
          Name:  getDeclaredAnnotationsByType
          Exceptions->NONE
          Parameter types-> 
          class java.lang.Class
          Return type:  class [Ljava.lang.annotation.Annotation;
          Modifiers:  public
         METHOD
          Name:  getDeclaredAnnotations
          Exceptions->NONE
          Parameter types-> NONE
          Return type:  class [Ljava.lang.annotation.Annotation;
          Modifiers:  public
         METHOD
          Name:  setAccessible
          Exceptions->NONE
          Parameter types-> 
          boolean
          Return type:  void
          Modifiers:  public
         METHOD
          Name:  setAccessible
          Exceptions->NONE
          Parameter types-> 
          class [Ljava.lang.reflect.AccessibleObject;
          boolean
          Return type:  void
          Modifiers:  public static
         METHOD
          Name:  checkAccess
          Exceptions->
          class java.lang.IllegalAccessException
          Parameter types-> 
          class java.lang.Class
          class java.lang.Class
          class java.lang.Class
          int
          Return type:  void
          Modifiers:  final
         METHOD
          Name:  checkCanSetAccessible
          Exceptions->NONE
          Parameter types-> 
          class java.lang.Class
          class java.lang.Class
          Return type:  void
          Modifiers:  final
         METHOD
          Name:  checkCanSetAccessible
          Exceptions->NONE
          Parameter types-> 
          class java.lang.Class
          Return type:  void
          Modifiers:  
         METHOD
          Name:  checkCanSetAccessible
          Exceptions->NONE
          Parameter types-> 
          class java.lang.Class
          class java.lang.Class
          boolean
          Return type:  boolean
          Modifiers:  private
         METHOD
          Name:  setAccessible0
          Exceptions->NONE
          Parameter types-> 
          boolean
          Return type:  boolean
          Modifiers:  
         METHOD
          Name:  isSubclassOf
          Exceptions->NONE
          Parameter types-> 
          class java.lang.Class
          class java.lang.Class
          Return type:  boolean
          Modifiers:  private
         METHOD
          Name:  printStackTraceWhenAccessFails
          Exceptions->NONE
          Parameter types-> NONE
          Return type:  boolean
          Modifiers:  private static
         METHOD
          Name:  verifyAccess
          Exceptions->NONE
          Parameter types-> 
          class java.lang.Class
          class java.lang.Class
          class java.lang.Class
          int
          Return type:  boolean
          Modifiers:  final
         METHOD
          Name:  isAccessChecked
          Exceptions->NONE
          Parameter types-> 
          class java.lang.Class
          Return type:  boolean
          Modifiers:  private
         METHOD
          Name:  isAccessChecked
          Exceptions->NONE
          Parameter types-> 
          class java.lang.Class
          class java.lang.Class
          Return type:  boolean
          Modifiers:  private
         METHOD
          Name:  slowVerifyAccess
          Exceptions->NONE
          Parameter types-> 
          class java.lang.Class
          class java.lang.Class
          class java.lang.Class
          int
          Return type:  boolean
          Modifiers:  private
         METHOD
          Name:  trySetAccessible
          Exceptions->NONE
          Parameter types-> NONE
          Return type:  boolean
          Modifiers:  public final
         METHOD
          Name:  toShortString
          Exceptions->NONE
          Parameter types-> NONE
          Return type:  class java.lang.String
          Modifiers:  
         METHOD
          Name:  isAccessible
          Exceptions->NONE
          Parameter types-> NONE
          Return type:  boolean
          Modifiers:  public
         METHOD
          Name:  canAccess
          Exceptions->NONE
          Parameter types-> 
          class java.lang.Object
          Return type:  boolean
          Modifiers:  public final
         METHOD
          Name:  getRoot
          Exceptions->NONE
          Parameter types-> NONE
          Return type:  class java.lang.reflect.AccessibleObject
          Modifiers:  
        FIELDS( class java.lang.reflect.AccessibleObject )
        Fields->None
=============Inspect finish==============
    INTERFACES:(class java.lang.reflect.Field)
    Interfaces-> 
    INTERFACE -> Recursively Inspect
    interface java.lang.reflect.Member
        CLASS
        Class:  java.lang.reflect.Member
        INTERFACES:(interface java.lang.reflect.Member)
        Interfaces-> NONE
        CONSTRUCTORS( interface java.lang.reflect.Member )
        Constructors->NONE
        METHODS( interface java.lang.reflect.Member )
        Methods->
         METHOD
          Name:  getName
          Exceptions->NONE
          Parameter types-> NONE
          Return type:  class java.lang.String
          Modifiers:  public abstract
         METHOD
          Name:  getModifiers
          Exceptions->NONE
          Parameter types-> NONE
          Return type:  int
          Modifiers:  public abstract
         METHOD
          Name:  isSynthetic
          Exceptions->NONE
          Parameter types-> NONE
          Return type:  boolean
          Modifiers:  public abstract
         METHOD
          Name:  getDeclaringClass
          Exceptions->NONE
          Parameter types-> NONE
          Return type:  class java.lang.Class
          Modifiers:  public abstract
        FIELDS( interface java.lang.reflect.Member )
        Fields->
         FIELD
          Name:  PUBLIC
          Type:  int
          Modifiers:  public static final
          Value:  0
         FIELD
          Name:  DECLARED
          Type:  int
          Modifiers:  public static final
          Value:  1
=============Inspect finish==============
    CONSTRUCTORS( class java.lang.reflect.Field )
    Constructors->
     Constructors:  
      Name:  java.lang.reflect.Field
      Exceptions-> None 
      Parameter types: 
      class java.lang.Class
      class java.lang.String
      class java.lang.Class
      int
      boolean
      int
      class java.lang.String
      class [B
      Modifiers:  
    METHODS( class java.lang.reflect.Field )
    Methods->
     METHOD
      Name:  getName
      Exceptions->NONE
      Parameter types-> NONE
      Return type:  class java.lang.String
      Modifiers:  public
     METHOD
      Name:  get
      Exceptions->
      class java.lang.IllegalArgumentException
      class java.lang.IllegalAccessException
      Parameter types-> 
      class java.lang.Object
      Return type:  class java.lang.Object
      Modifiers:  public
     METHOD
      Name:  equals
      Exceptions->NONE
      Parameter types-> 
      class java.lang.Object
      Return type:  boolean
      Modifiers:  public
     METHOD
      Name:  toString
      Exceptions->NONE
      Parameter types-> NONE
      Return type:  class java.lang.String
      Modifiers:  public
     METHOD
      Name:  hashCode
      Exceptions->NONE
      Parameter types-> NONE
      Return type:  int
      Modifiers:  public
     METHOD
      Name:  getModifiers
      Exceptions->NONE
      Parameter types-> NONE
      Return type:  int
      Modifiers:  public
     METHOD
      Name:  getBoolean
      Exceptions->
      class java.lang.IllegalArgumentException
      class java.lang.IllegalAccessException
      Parameter types-> 
      class java.lang.Object
      Return type:  boolean
      Modifiers:  public
     METHOD
      Name:  getByte
      Exceptions->
      class java.lang.IllegalArgumentException
      class java.lang.IllegalAccessException
      Parameter types-> 
      class java.lang.Object
      Return type:  byte
      Modifiers:  public
     METHOD
      Name:  getShort
      Exceptions->
      class java.lang.IllegalArgumentException
      class java.lang.IllegalAccessException
      Parameter types-> 
      class java.lang.Object
      Return type:  short
      Modifiers:  public
     METHOD
      Name:  getChar
      Exceptions->
      class java.lang.IllegalArgumentException
      class java.lang.IllegalAccessException
      Parameter types-> 
      class java.lang.Object
      Return type:  char
      Modifiers:  public
     METHOD
      Name:  getInt
      Exceptions->
      class java.lang.IllegalArgumentException
      class java.lang.IllegalAccessException
      Parameter types-> 
      class java.lang.Object
      Return type:  int
      Modifiers:  public
     METHOD
      Name:  getLong
      Exceptions->
      class java.lang.IllegalArgumentException
      class java.lang.IllegalAccessException
      Parameter types-> 
      class java.lang.Object
      Return type:  long
      Modifiers:  public
     METHOD
      Name:  getFloat
      Exceptions->
      class java.lang.IllegalArgumentException
      class java.lang.IllegalAccessException
      Parameter types-> 
      class java.lang.Object
      Return type:  float
      Modifiers:  public
     METHOD
      Name:  getDouble
      Exceptions->
      class java.lang.IllegalArgumentException
      class java.lang.IllegalAccessException
      Parameter types-> 
      class java.lang.Object
      Return type:  double
      Modifiers:  public
     METHOD
      Name:  getGenericInfo
      Exceptions->NONE
      Parameter types-> NONE
      Return type:  class sun.reflect.generics.repository.FieldRepository
      Modifiers:  private
     METHOD
      Name:  getFactory
      Exceptions->NONE
      Parameter types-> NONE
      Return type:  interface sun.reflect.generics.factory.GenericsFactory
      Modifiers:  private
     METHOD
      Name:  declaredAnnotations
      Exceptions->NONE
      Parameter types-> NONE
      Return type:  interface java.util.Map
      Modifiers:  private
     METHOD
      Name:  toGenericString
      Exceptions->NONE
      Parameter types-> NONE
      Return type:  class java.lang.String
      Modifiers:  public
     METHOD
      Name:  isSynthetic
      Exceptions->NONE
      Parameter types-> NONE
      Return type:  boolean
      Modifiers:  public
     METHOD
      Name:  getDeclaringClass
      Exceptions->NONE
      Parameter types-> NONE
      Return type:  class java.lang.Class
      Modifiers:  public
     METHOD
      Name:  getAnnotation
      Exceptions->NONE
      Parameter types-> 
      class java.lang.Class
      Return type:  interface java.lang.annotation.Annotation
      Modifiers:  public
     METHOD
      Name:  getAnnotationsByType
      Exceptions->NONE
      Parameter types-> 
      class java.lang.Class
      Return type:  class [Ljava.lang.annotation.Annotation;
      Modifiers:  public
     METHOD
      Name:  getDeclaredAnnotations
      Exceptions->NONE
      Parameter types-> NONE
      Return type:  class [Ljava.lang.annotation.Annotation;
      Modifiers:  public
     METHOD
      Name:  set
      Exceptions->
      class java.lang.IllegalArgumentException
      class java.lang.IllegalAccessException
      Parameter types-> 
      class java.lang.Object
      class java.lang.Object
      Return type:  void
      Modifiers:  public
     METHOD
      Name:  setAccessible
      Exceptions->NONE
      Parameter types-> 
      boolean
      Return type:  void
      Modifiers:  public
     METHOD
      Name:  checkAccess
      Exceptions->
      class java.lang.IllegalAccessException
      Parameter types-> 
      class java.lang.Class
      class java.lang.Object
      Return type:  void
      Modifiers:  private
     METHOD
      Name:  checkCanSetAccessible
      Exceptions->NONE
      Parameter types-> 
      class java.lang.Class
      Return type:  void
      Modifiers:  
     METHOD
      Name:  toShortString
      Exceptions->NONE
      Parameter types-> NONE
      Return type:  class java.lang.String
      Modifiers:  
     METHOD
      Name:  getRoot
      Exceptions->NONE
      Parameter types-> NONE
      Return type:  class java.lang.reflect.Field
      Modifiers:  
     METHOD
      Name:  getRoot
      Exceptions->NONE
      Parameter types-> NONE
      Return type:  class java.lang.reflect.AccessibleObject
      Modifiers:  volatile
     METHOD
      Name:  getGenericSignature
      Exceptions->NONE
      Parameter types-> NONE
      Return type:  class java.lang.String
      Modifiers:  private
     METHOD
      Name:  getGenericType
      Exceptions->NONE
      Parameter types-> NONE
      Return type:  interface java.lang.reflect.Type
      Modifiers:  public
     METHOD
      Name:  getType
      Exceptions->NONE
      Parameter types-> NONE
      Return type:  class java.lang.Class
      Modifiers:  public
     METHOD
      Name:  getFieldAccessor
      Exceptions->
      class java.lang.IllegalAccessException
      Parameter types-> 
      class java.lang.Object
      Return type:  interface jdk.internal.reflect.FieldAccessor
      Modifiers:  private
     METHOD
      Name:  getFieldAccessor
      Exceptions->NONE
      Parameter types-> 
      boolean
      Return type:  interface jdk.internal.reflect.FieldAccessor
      Modifiers:  private
     METHOD
      Name:  setBoolean
      Exceptions->
      class java.lang.IllegalArgumentException
      class java.lang.IllegalAccessException
      Parameter types-> 
      class java.lang.Object
      boolean
      Return type:  void
      Modifiers:  public
     METHOD
      Name:  setByte
      Exceptions->
      class java.lang.IllegalArgumentException
      class java.lang.IllegalAccessException
      Parameter types-> 
      class java.lang.Object
      byte
      Return type:  void
      Modifiers:  public
     METHOD
      Name:  setChar
      Exceptions->
      class java.lang.IllegalArgumentException
      class java.lang.IllegalAccessException
      Parameter types-> 
      class java.lang.Object
      char
      Return type:  void
      Modifiers:  public
     METHOD
      Name:  setShort
      Exceptions->
      class java.lang.IllegalArgumentException
      class java.lang.IllegalAccessException
      Parameter types-> 
      class java.lang.Object
      short
      Return type:  void
      Modifiers:  public
     METHOD
      Name:  setInt
      Exceptions->
      class java.lang.IllegalArgumentException
      class java.lang.IllegalAccessException
      Parameter types-> 
      class java.lang.Object
      int
      Return type:  void
      Modifiers:  public
     METHOD
      Name:  setLong
      Exceptions->
      class java.lang.IllegalArgumentException
      class java.lang.IllegalAccessException
      Parameter types-> 
      class java.lang.Object
      long
      Return type:  void
      Modifiers:  public
     METHOD
      Name:  setFloat
      Exceptions->
      class java.lang.IllegalArgumentException
      class java.lang.IllegalAccessException
      Parameter types-> 
      class java.lang.Object
      float
      Return type:  void
      Modifiers:  public
     METHOD
      Name:  setDouble
      Exceptions->
      class java.lang.IllegalArgumentException
      class java.lang.IllegalAccessException
      Parameter types-> 
      class java.lang.Object
      double
      Return type:  void
      Modifiers:  public
     METHOD
      Name:  acquireFieldAccessor
      Exceptions->NONE
      Parameter types-> 
      boolean
      Return type:  interface jdk.internal.reflect.FieldAccessor
      Modifiers:  private
     METHOD
      Name:  setFieldAccessor
      Exceptions->NONE
      Parameter types-> 
      interface jdk.internal.reflect.FieldAccessor
      boolean
      Return type:  void
      Modifiers:  private
     METHOD
      Name:  getTypeAnnotationBytes0
      Exceptions->NONE
      Parameter types-> NONE
      Return type:  class [B
      Modifiers:  private native
     METHOD
      Name:  copy
      Exceptions->NONE
      Parameter types-> NONE
      Return type:  class java.lang.reflect.Field
      Modifiers:  
     METHOD
      Name:  isEnumConstant
      Exceptions->NONE
      Parameter types-> NONE
      Return type:  boolean
      Modifiers:  public
     METHOD
      Name:  isTrustedFinal
      Exceptions->NONE
      Parameter types-> NONE
      Return type:  boolean
      Modifiers:  
     METHOD
      Name:  getAnnotatedType
      Exceptions->NONE
      Parameter types-> NONE
      Return type:  interface java.lang.reflect.AnnotatedType
      Modifiers:  public
    FIELDS( class java.lang.reflect.Field )
    Fields->None
=============Inspect finish==============
 FIELD
  Name:  val2
  Type:  class ClassA
  Modifiers:  private static
    CLASS
    Class:  java.lang.reflect.Field
    SUPERCLASS -> Recursively Inspect
    SuperClass: java.lang.reflect.AccessibleObject
        CLASS
        Class:  java.lang.reflect.AccessibleObject
        SUPERCLASS -> Recursively Inspect
        SuperClass: java.lang.Object
            CLASS
            Class:  java.lang.Object
            SuperClass: NONE
            INTERFACES:(class java.lang.Object)
            Interfaces-> NONE
            CONSTRUCTORS( class java.lang.Object )
            Constructors->
             Constructors:  
              Name:  java.lang.Object
              Exceptions-> None 
              Parameter types: 
              Modifiers:  public
            METHODS( class java.lang.Object )
            Methods->
             METHOD
              Name:  finalize
              Exceptions->
              class java.lang.Throwable
              Parameter types-> NONE
              Return type:  void
              Modifiers:  protected
             METHOD
              Name:  wait
              Exceptions->
              class java.lang.InterruptedException
              Parameter types-> 
              long
              int
              Return type:  void
              Modifiers:  public final
             METHOD
              Name:  wait
              Exceptions->
              class java.lang.InterruptedException
              Parameter types-> NONE
              Return type:  void
              Modifiers:  public final
             METHOD
              Name:  wait
              Exceptions->
              class java.lang.InterruptedException
              Parameter types-> 
              long
              Return type:  void
              Modifiers:  public final native
             METHOD
              Name:  equals
              Exceptions->NONE
              Parameter types-> 
              class java.lang.Object
              Return type:  boolean
              Modifiers:  public
             METHOD
              Name:  toString
              Exceptions->NONE
              Parameter types-> NONE
              Return type:  class java.lang.String
              Modifiers:  public
             METHOD
              Name:  hashCode
              Exceptions->NONE
              Parameter types-> NONE
              Return type:  int
              Modifiers:  public native
             METHOD
              Name:  getClass
              Exceptions->NONE
              Parameter types-> NONE
              Return type:  class java.lang.Class
              Modifiers:  public final native
             METHOD
              Name:  clone
              Exceptions->
              class java.lang.CloneNotSupportedException
              Parameter types-> NONE
              Return type:  class java.lang.Object
              Modifiers:  protected native
             METHOD
              Name:  notify
              Exceptions->NONE
              Parameter types-> NONE
              Return type:  void
              Modifiers:  public final native
             METHOD
              Name:  notifyAll
              Exceptions->NONE
              Parameter types-> NONE
              Return type:  void
              Modifiers:  public final native
            FIELDS( class java.lang.Object )
            Fields->None
=============Inspect finish==============
        INTERFACES:(class java.lang.reflect.AccessibleObject)
        Interfaces-> 
        INTERFACE -> Recursively Inspect
        interface java.lang.reflect.AnnotatedElement
            CLASS
            Class:  java.lang.reflect.AnnotatedElement
            INTERFACES:(interface java.lang.reflect.AnnotatedElement)
            Interfaces-> NONE
            CONSTRUCTORS( interface java.lang.reflect.AnnotatedElement )
            Constructors->NONE
            METHODS( interface java.lang.reflect.AnnotatedElement )
            Methods->
             METHOD
              Name:  isAnnotationPresent
              Exceptions->NONE
              Parameter types-> 
              class java.lang.Class
              Return type:  boolean
              Modifiers:  public
             METHOD
              Name:  getAnnotation
              Exceptions->NONE
              Parameter types-> 
              class java.lang.Class
              Return type:  interface java.lang.annotation.Annotation
              Modifiers:  public abstract
             METHOD
              Name:  getAnnotationsByType
              Exceptions->NONE
              Parameter types-> 
              class java.lang.Class
              Return type:  class [Ljava.lang.annotation.Annotation;
              Modifiers:  public
             METHOD
              Name:  getAnnotations
              Exceptions->NONE
              Parameter types-> NONE
              Return type:  class [Ljava.lang.annotation.Annotation;
              Modifiers:  public abstract
             METHOD
              Name:  getDeclaredAnnotation
              Exceptions->NONE
              Parameter types-> 
              class java.lang.Class
              Return type:  interface java.lang.annotation.Annotation
              Modifiers:  public
             METHOD
              Name:  getDeclaredAnnotationsByType
              Exceptions->NONE
              Parameter types-> 
              class java.lang.Class
              Return type:  class [Ljava.lang.annotation.Annotation;
              Modifiers:  public
             METHOD
              Name:  getDeclaredAnnotations
              Exceptions->NONE
              Parameter types-> NONE
              Return type:  class [Ljava.lang.annotation.Annotation;
              Modifiers:  public abstract
             METHOD
              Name:  lambda$getDeclaredAnnotationsByType$0
              Exceptions->NONE
              Parameter types-> 
              interface java.lang.annotation.Annotation
              interface java.lang.annotation.Annotation
              Return type:  interface java.lang.annotation.Annotation
              Modifiers:  private static
            FIELDS( interface java.lang.reflect.AnnotatedElement )
            Fields->None
=============Inspect finish==============
        CONSTRUCTORS( class java.lang.reflect.AccessibleObject )
        Constructors->
         Constructors:  
          Name:  java.lang.reflect.AccessibleObject
          Exceptions-> None 
          Parameter types: 
          Modifiers:  protected
        METHODS( class java.lang.reflect.AccessibleObject )
        Methods->
         METHOD
          Name:  checkPermission
          Exceptions->NONE
          Parameter types-> NONE
          Return type:  void
          Modifiers:  static
         METHOD
          Name:  isAnnotationPresent
          Exceptions->NONE
          Parameter types-> 
          class java.lang.Class
          Return type:  boolean
          Modifiers:  public
         METHOD
          Name:  getAnnotation
          Exceptions->NONE
          Parameter types-> 
          class java.lang.Class
          Return type:  interface java.lang.annotation.Annotation
          Modifiers:  public
         METHOD
          Name:  getAnnotationsByType
          Exceptions->NONE
          Parameter types-> 
          class java.lang.Class
          Return type:  class [Ljava.lang.annotation.Annotation;
          Modifiers:  public
         METHOD
          Name:  getAnnotations
          Exceptions->NONE
          Parameter types-> NONE
          Return type:  class [Ljava.lang.annotation.Annotation;
          Modifiers:  public
         METHOD
          Name:  getDeclaredAnnotation
          Exceptions->NONE
          Parameter types-> 
          class java.lang.Class
          Return type:  interface java.lang.annotation.Annotation
          Modifiers:  public
         METHOD
          Name:  getDeclaredAnnotationsByType
          Exceptions->NONE
          Parameter types-> 
          class java.lang.Class
          Return type:  class [Ljava.lang.annotation.Annotation;
          Modifiers:  public
         METHOD
          Name:  getDeclaredAnnotations
          Exceptions->NONE
          Parameter types-> NONE
          Return type:  class [Ljava.lang.annotation.Annotation;
          Modifiers:  public
         METHOD
          Name:  setAccessible
          Exceptions->NONE
          Parameter types-> 
          boolean
          Return type:  void
          Modifiers:  public
         METHOD
          Name:  setAccessible
          Exceptions->NONE
          Parameter types-> 
          class [Ljava.lang.reflect.AccessibleObject;
          boolean
          Return type:  void
          Modifiers:  public static
         METHOD
          Name:  checkAccess
          Exceptions->
          class java.lang.IllegalAccessException
          Parameter types-> 
          class java.lang.Class
          class java.lang.Class
          class java.lang.Class
          int
          Return type:  void
          Modifiers:  final
         METHOD
          Name:  checkCanSetAccessible
          Exceptions->NONE
          Parameter types-> 
          class java.lang.Class
          class java.lang.Class
          Return type:  void
          Modifiers:  final
         METHOD
          Name:  checkCanSetAccessible
          Exceptions->NONE
          Parameter types-> 
          class java.lang.Class
          Return type:  void
          Modifiers:  
         METHOD
          Name:  checkCanSetAccessible
          Exceptions->NONE
          Parameter types-> 
          class java.lang.Class
          class java.lang.Class
          boolean
          Return type:  boolean
          Modifiers:  private
         METHOD
          Name:  setAccessible0
          Exceptions->NONE
          Parameter types-> 
          boolean
          Return type:  boolean
          Modifiers:  
         METHOD
          Name:  isSubclassOf
          Exceptions->NONE
          Parameter types-> 
          class java.lang.Class
          class java.lang.Class
          Return type:  boolean
          Modifiers:  private
         METHOD
          Name:  printStackTraceWhenAccessFails
          Exceptions->NONE
          Parameter types-> NONE
          Return type:  boolean
          Modifiers:  private static
         METHOD
          Name:  verifyAccess
          Exceptions->NONE
          Parameter types-> 
          class java.lang.Class
          class java.lang.Class
          class java.lang.Class
          int
          Return type:  boolean
          Modifiers:  final
         METHOD
          Name:  isAccessChecked
          Exceptions->NONE
          Parameter types-> 
          class java.lang.Class
          Return type:  boolean
          Modifiers:  private
         METHOD
          Name:  isAccessChecked
          Exceptions->NONE
          Parameter types-> 
          class java.lang.Class
          class java.lang.Class
          Return type:  boolean
          Modifiers:  private
         METHOD
          Name:  slowVerifyAccess
          Exceptions->NONE
          Parameter types-> 
          class java.lang.Class
          class java.lang.Class
          class java.lang.Class
          int
          Return type:  boolean
          Modifiers:  private
         METHOD
          Name:  trySetAccessible
          Exceptions->NONE
          Parameter types-> NONE
          Return type:  boolean
          Modifiers:  public final
         METHOD
          Name:  toShortString
          Exceptions->NONE
          Parameter types-> NONE
          Return type:  class java.lang.String
          Modifiers:  
         METHOD
          Name:  isAccessible
          Exceptions->NONE
          Parameter types-> NONE
          Return type:  boolean
          Modifiers:  public
         METHOD
          Name:  canAccess
          Exceptions->NONE
          Parameter types-> 
          class java.lang.Object
          Return type:  boolean
          Modifiers:  public final
         METHOD
          Name:  getRoot
          Exceptions->NONE
          Parameter types-> NONE
          Return type:  class java.lang.reflect.AccessibleObject
          Modifiers:  
        FIELDS( class java.lang.reflect.AccessibleObject )
        Fields->None
=============Inspect finish==============
    INTERFACES:(class java.lang.reflect.Field)
    Interfaces-> 
    INTERFACE -> Recursively Inspect
    interface java.lang.reflect.Member
        CLASS
        Class:  java.lang.reflect.Member
        INTERFACES:(interface java.lang.reflect.Member)
        Interfaces-> NONE
        CONSTRUCTORS( interface java.lang.reflect.Member )
        Constructors->NONE
        METHODS( interface java.lang.reflect.Member )
        Methods->
         METHOD
          Name:  getName
          Exceptions->NONE
          Parameter types-> NONE
          Return type:  class java.lang.String
          Modifiers:  public abstract
         METHOD
          Name:  getModifiers
          Exceptions->NONE
          Parameter types-> NONE
          Return type:  int
          Modifiers:  public abstract
         METHOD
          Name:  isSynthetic
          Exceptions->NONE
          Parameter types-> NONE
          Return type:  boolean
          Modifiers:  public abstract
         METHOD
          Name:  getDeclaringClass
          Exceptions->NONE
          Parameter types-> NONE
          Return type:  class java.lang.Class
          Modifiers:  public abstract
        FIELDS( interface java.lang.reflect.Member )
        Fields->
         FIELD
          Name:  PUBLIC
          Type:  int
          Modifiers:  public static final
          Value:  0
         FIELD
          Name:  DECLARED
          Type:  int
          Modifiers:  public static final
          Value:  1
=============Inspect finish==============
    CONSTRUCTORS( class java.lang.reflect.Field )
    Constructors->
     Constructors:  
      Name:  java.lang.reflect.Field
      Exceptions-> None 
      Parameter types: 
      class java.lang.Class
      class java.lang.String
      class java.lang.Class
      int
      boolean
      int
      class java.lang.String
      class [B
      Modifiers:  
    METHODS( class java.lang.reflect.Field )
    Methods->
     METHOD
      Name:  getName
      Exceptions->NONE
      Parameter types-> NONE
      Return type:  class java.lang.String
      Modifiers:  public
     METHOD
      Name:  get
      Exceptions->
      class java.lang.IllegalArgumentException
      class java.lang.IllegalAccessException
      Parameter types-> 
      class java.lang.Object
      Return type:  class java.lang.Object
      Modifiers:  public
     METHOD
      Name:  equals
      Exceptions->NONE
      Parameter types-> 
      class java.lang.Object
      Return type:  boolean
      Modifiers:  public
     METHOD
      Name:  toString
      Exceptions->NONE
      Parameter types-> NONE
      Return type:  class java.lang.String
      Modifiers:  public
     METHOD
      Name:  hashCode
      Exceptions->NONE
      Parameter types-> NONE
      Return type:  int
      Modifiers:  public
     METHOD
      Name:  getModifiers
      Exceptions->NONE
      Parameter types-> NONE
      Return type:  int
      Modifiers:  public
     METHOD
      Name:  getBoolean
      Exceptions->
      class java.lang.IllegalArgumentException
      class java.lang.IllegalAccessException
      Parameter types-> 
      class java.lang.Object
      Return type:  boolean
      Modifiers:  public
     METHOD
      Name:  getByte
      Exceptions->
      class java.lang.IllegalArgumentException
      class java.lang.IllegalAccessException
      Parameter types-> 
      class java.lang.Object
      Return type:  byte
      Modifiers:  public
     METHOD
      Name:  getShort
      Exceptions->
      class java.lang.IllegalArgumentException
      class java.lang.IllegalAccessException
      Parameter types-> 
      class java.lang.Object
      Return type:  short
      Modifiers:  public
     METHOD
      Name:  getChar
      Exceptions->
      class java.lang.IllegalArgumentException
      class java.lang.IllegalAccessException
      Parameter types-> 
      class java.lang.Object
      Return type:  char
      Modifiers:  public
     METHOD
      Name:  getInt
      Exceptions->
      class java.lang.IllegalArgumentException
      class java.lang.IllegalAccessException
      Parameter types-> 
      class java.lang.Object
      Return type:  int
      Modifiers:  public
     METHOD
      Name:  getLong
      Exceptions->
      class java.lang.IllegalArgumentException
      class java.lang.IllegalAccessException
      Parameter types-> 
      class java.lang.Object
      Return type:  long
      Modifiers:  public
     METHOD
      Name:  getFloat
      Exceptions->
      class java.lang.IllegalArgumentException
      class java.lang.IllegalAccessException
      Parameter types-> 
      class java.lang.Object
      Return type:  float
      Modifiers:  public
     METHOD
      Name:  getDouble
      Exceptions->
      class java.lang.IllegalArgumentException
      class java.lang.IllegalAccessException
      Parameter types-> 
      class java.lang.Object
      Return type:  double
      Modifiers:  public
     METHOD
      Name:  getGenericInfo
      Exceptions->NONE
      Parameter types-> NONE
      Return type:  class sun.reflect.generics.repository.FieldRepository
      Modifiers:  private
     METHOD
      Name:  getFactory
      Exceptions->NONE
      Parameter types-> NONE
      Return type:  interface sun.reflect.generics.factory.GenericsFactory
      Modifiers:  private
     METHOD
      Name:  declaredAnnotations
      Exceptions->NONE
      Parameter types-> NONE
      Return type:  interface java.util.Map
      Modifiers:  private
     METHOD
      Name:  toGenericString
      Exceptions->NONE
      Parameter types-> NONE
      Return type:  class java.lang.String
      Modifiers:  public
     METHOD
      Name:  isSynthetic
      Exceptions->NONE
      Parameter types-> NONE
      Return type:  boolean
      Modifiers:  public
     METHOD
      Name:  getDeclaringClass
      Exceptions->NONE
      Parameter types-> NONE
      Return type:  class java.lang.Class
      Modifiers:  public
     METHOD
      Name:  getAnnotation
      Exceptions->NONE
      Parameter types-> 
      class java.lang.Class
      Return type:  interface java.lang.annotation.Annotation
      Modifiers:  public
     METHOD
      Name:  getAnnotationsByType
      Exceptions->NONE
      Parameter types-> 
      class java.lang.Class
      Return type:  class [Ljava.lang.annotation.Annotation;
      Modifiers:  public
     METHOD
      Name:  getDeclaredAnnotations
      Exceptions->NONE
      Parameter types-> NONE
      Return type:  class [Ljava.lang.annotation.Annotation;
      Modifiers:  public
     METHOD
      Name:  set
      Exceptions->
      class java.lang.IllegalArgumentException
      class java.lang.IllegalAccessException
      Parameter types-> 
      class java.lang.Object
      class java.lang.Object
      Return type:  void
      Modifiers:  public
     METHOD
      Name:  setAccessible
      Exceptions->NONE
      Parameter types-> 
      boolean
      Return type:  void
      Modifiers:  public
     METHOD
      Name:  checkAccess
      Exceptions->
      class java.lang.IllegalAccessException
      Parameter types-> 
      class java.lang.Class
      class java.lang.Object
      Return type:  void
      Modifiers:  private
     METHOD
      Name:  checkCanSetAccessible
      Exceptions->NONE
      Parameter types-> 
      class java.lang.Class
      Return type:  void
      Modifiers:  
     METHOD
      Name:  toShortString
      Exceptions->NONE
      Parameter types-> NONE
      Return type:  class java.lang.String
      Modifiers:  
     METHOD
      Name:  getRoot
      Exceptions->NONE
      Parameter types-> NONE
      Return type:  class java.lang.reflect.Field
      Modifiers:  
     METHOD
      Name:  getRoot
      Exceptions->NONE
      Parameter types-> NONE
      Return type:  class java.lang.reflect.AccessibleObject
      Modifiers:  volatile
     METHOD
      Name:  getGenericSignature
      Exceptions->NONE
      Parameter types-> NONE
      Return type:  class java.lang.String
      Modifiers:  private
     METHOD
      Name:  getGenericType
      Exceptions->NONE
      Parameter types-> NONE
      Return type:  interface java.lang.reflect.Type
      Modifiers:  public
     METHOD
      Name:  getType
      Exceptions->NONE
      Parameter types-> NONE
      Return type:  class java.lang.Class
      Modifiers:  public
     METHOD
      Name:  getFieldAccessor
      Exceptions->
      class java.lang.IllegalAccessException
      Parameter types-> 
      class java.lang.Object
      Return type:  interface jdk.internal.reflect.FieldAccessor
      Modifiers:  private
     METHOD
      Name:  getFieldAccessor
      Exceptions->NONE
      Parameter types-> 
      boolean
      Return type:  interface jdk.internal.reflect.FieldAccessor
      Modifiers:  private
     METHOD
      Name:  setBoolean
      Exceptions->
      class java.lang.IllegalArgumentException
      class java.lang.IllegalAccessException
      Parameter types-> 
      class java.lang.Object
      boolean
      Return type:  void
      Modifiers:  public
     METHOD
      Name:  setByte
      Exceptions->
      class java.lang.IllegalArgumentException
      class java.lang.IllegalAccessException
      Parameter types-> 
      class java.lang.Object
      byte
      Return type:  void
      Modifiers:  public
     METHOD
      Name:  setChar
      Exceptions->
      class java.lang.IllegalArgumentException
      class java.lang.IllegalAccessException
      Parameter types-> 
      class java.lang.Object
      char
      Return type:  void
      Modifiers:  public
     METHOD
      Name:  setShort
      Exceptions->
      class java.lang.IllegalArgumentException
      class java.lang.IllegalAccessException
      Parameter types-> 
      class java.lang.Object
      short
      Return type:  void
      Modifiers:  public
     METHOD
      Name:  setInt
      Exceptions->
      class java.lang.IllegalArgumentException
      class java.lang.IllegalAccessException
      Parameter types-> 
      class java.lang.Object
      int
      Return type:  void
      Modifiers:  public
     METHOD
      Name:  setLong
      Exceptions->
      class java.lang.IllegalArgumentException
      class java.lang.IllegalAccessException
      Parameter types-> 
      class java.lang.Object
      long
      Return type:  void
      Modifiers:  public
     METHOD
      Name:  setFloat
      Exceptions->
      class java.lang.IllegalArgumentException
      class java.lang.IllegalAccessException
      Parameter types-> 
      class java.lang.Object
      float
      Return type:  void
      Modifiers:  public
     METHOD
      Name:  setDouble
      Exceptions->
      class java.lang.IllegalArgumentException
      class java.lang.IllegalAccessException
      Parameter types-> 
      class java.lang.Object
      double
      Return type:  void
      Modifiers:  public
     METHOD
      Name:  acquireFieldAccessor
      Exceptions->NONE
      Parameter types-> 
      boolean
      Return type:  interface jdk.internal.reflect.FieldAccessor
      Modifiers:  private
     METHOD
      Name:  setFieldAccessor
      Exceptions->NONE
      Parameter types-> 
      interface jdk.internal.reflect.FieldAccessor
      boolean
      Return type:  void
      Modifiers:  private
     METHOD
      Name:  getTypeAnnotationBytes0
      Exceptions->NONE
      Parameter types-> NONE
      Return type:  class [B
      Modifiers:  private native
     METHOD
      Name:  copy
      Exceptions->NONE
      Parameter types-> NONE
      Return type:  class java.lang.reflect.Field
      Modifiers:  
     METHOD
      Name:  isEnumConstant
      Exceptions->NONE
      Parameter types-> NONE
      Return type:  boolean
      Modifiers:  public
     METHOD
      Name:  isTrustedFinal
      Exceptions->NONE
      Parameter types-> NONE
      Return type:  boolean
      Modifiers:  
     METHOD
      Name:  getAnnotatedType
      Exceptions->NONE
      Parameter types-> NONE
      Return type:  interface java.lang.reflect.AnnotatedType
      Modifiers:  public
    FIELDS( class java.lang.reflect.Field )
    Fields->None
=============Inspect finish==============
 FIELD
  Name:  val3
  Type:  int
  Modifiers:  private
  Value:  32
 FIELD
  Name:  vallarray
  Type:  class [LClassA;
  Modifiers:  private
  Component Type:  class ClassA
  Length:  10
  Entries->
  Value:  null
  Value:  null
  Value:  null
  Value:  null
  Value:  null
  Value:  null
  Value:  null
  Value:  null
  Value:  null
  Value:  null
=============Inspect finish==============
======================================================
