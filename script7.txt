======================================================
Filename: script7.txt
Running Test: [LClassB;@3d075dc0
Recursive: true
     CLASS
     Class:  ClassB
     SUPERCLASS -> Recursively Inspect
     SuperClass: ClassC
          CLASS
          Class:  ClassC
          SUPERCLASS -> Recursively Inspect
          SuperClass: ClassD
               CLASS
               Class:  ClassD
               SUPERCLASS -> Recursively Inspect
               SuperClass: java.lang.Object
                    CLASS
                    Class:  java.lang.Object
                    SuperClass: NONE
                    INTERFACES:(class java.lang.Object)
                    Interfaces-> NONE
                    CONSTRUCTORS( class java.lang.Object )
                    Constructors->
                     Constructors:  
                      Name:  java.lang.Object
                      Exceptions-> None 
                      Parameter types: 
                      Modifiers:  public
                    METHODS( class java.lang.Object )
                    Methods->
                     METHOD
                      Name:  finalize
                      Exceptions->
                      class java.lang.Throwable
                      Parameter types-> NONE
                      Return type:  void
                      Modifiers:  protected
                     METHOD
                      Name:  wait
                      Exceptions->
                      class java.lang.InterruptedException
                      Parameter types-> 
                      long
                      int
                      Return type:  void
                      Modifiers:  public final
                     METHOD
                      Name:  wait
                      Exceptions->
                      class java.lang.InterruptedException
                      Parameter types-> NONE
                      Return type:  void
                      Modifiers:  public final
                     METHOD
                      Name:  wait
                      Exceptions->
                      class java.lang.InterruptedException
                      Parameter types-> 
                      long
                      Return type:  void
                      Modifiers:  public final native
                     METHOD
                      Name:  equals
                      Exceptions->NONE
                      Parameter types-> 
                      class java.lang.Object
                      Return type:  boolean
                      Modifiers:  public
                     METHOD
                      Name:  toString
                      Exceptions->NONE
                      Parameter types-> NONE
                      Return type:  class java.lang.String
                      Modifiers:  public
                     METHOD
                      Name:  hashCode
                      Exceptions->NONE
                      Parameter types-> NONE
                      Return type:  int
                      Modifiers:  public native
                     METHOD
                      Name:  getClass
                      Exceptions->NONE
                      Parameter types-> NONE
                      Return type:  class java.lang.Class
                      Modifiers:  public final native
                     METHOD
                      Name:  clone
                      Exceptions->
                      class java.lang.CloneNotSupportedException
                      Parameter types-> NONE
                      Return type:  class java.lang.Object
                      Modifiers:  protected native
                     METHOD
                      Name:  notify
                      Exceptions->NONE
                      Parameter types-> NONE
                      Return type:  void
                      Modifiers:  public final native
                     METHOD
                      Name:  notifyAll
                      Exceptions->NONE
                      Parameter types-> NONE
                      Return type:  void
                      Modifiers:  public final native
                    FIELDS( class java.lang.Object )
                    Fields->None
               INTERFACES:(class ClassD)
               Interfaces-> NONE
               CONSTRUCTORS( class ClassD )
               Constructors->
                Constructors:  
                 Name:  ClassD
                 Exceptions-> None 
                 Parameter types: 
                 Modifiers:  public
                Constructors:  
                 Name:  ClassD
                 Exceptions-> None 
                 Parameter types: 
                 int
                 Modifiers:  public
               METHODS( class ClassD )
               Methods->
                METHOD
                 Name:  toString
                 Exceptions->NONE
                 Parameter types-> NONE
                 Return type:  class java.lang.String
                 Modifiers:  public
                METHOD
                 Name:  getVal3
                 Exceptions->NONE
                 Parameter types-> NONE
                 Return type:  int
                 Modifiers:  public
               FIELDS( class ClassD )
               Fields->
                FIELD
                 Name:  val
                 Type:  class ClassA
                 Modifiers:  private
                 Value:  ClassA
                  -> Recursively inspect
                    CLASS
                    Class:  ClassA
                    SUPERCLASS -> Recursively Inspect
                    SuperClass: java.lang.Object
                         CLASS
                         Class:  java.lang.Object
                         SuperClass: NONE
                         INTERFACES:(class java.lang.Object)
                         Interfaces-> NONE
                         CONSTRUCTORS( class java.lang.Object )
                         Constructors->
                          Constructors:  
                           Name:  java.lang.Object
                           Exceptions-> None 
                           Parameter types: 
                           Modifiers:  public
                         METHODS( class java.lang.Object )
                         Methods->
                          METHOD
                           Name:  finalize
                           Exceptions->
                           class java.lang.Throwable
                           Parameter types-> NONE
                           Return type:  void
                           Modifiers:  protected
                          METHOD
                           Name:  wait
                           Exceptions->
                           class java.lang.InterruptedException
                           Parameter types-> 
                           long
                           int
                           Return type:  void
                           Modifiers:  public final
                          METHOD
                           Name:  wait
                           Exceptions->
                           class java.lang.InterruptedException
                           Parameter types-> NONE
                           Return type:  void
                           Modifiers:  public final
                          METHOD
                           Name:  wait
                           Exceptions->
                           class java.lang.InterruptedException
                           Parameter types-> 
                           long
                           Return type:  void
                           Modifiers:  public final native
                          METHOD
                           Name:  equals
                           Exceptions->NONE
                           Parameter types-> 
                           class java.lang.Object
                           Return type:  boolean
                           Modifiers:  public
                          METHOD
                           Name:  toString
                           Exceptions->NONE
                           Parameter types-> NONE
                           Return type:  class java.lang.String
                           Modifiers:  public
                          METHOD
                           Name:  hashCode
                           Exceptions->NONE
                           Parameter types-> NONE
                           Return type:  int
                           Modifiers:  public native
                          METHOD
                           Name:  getClass
                           Exceptions->NONE
                           Parameter types-> NONE
                           Return type:  class java.lang.Class
                           Modifiers:  public final native
                          METHOD
                           Name:  clone
                           Exceptions->
                           class java.lang.CloneNotSupportedException
                           Parameter types-> NONE
                           Return type:  class java.lang.Object
                           Modifiers:  protected native
                          METHOD
                           Name:  notify
                           Exceptions->NONE
                           Parameter types-> NONE
                           Return type:  void
                           Modifiers:  public final native
                          METHOD
                           Name:  notifyAll
                           Exceptions->NONE
                           Parameter types-> NONE
                           Return type:  void
                           Modifiers:  public final native
                         FIELDS( class java.lang.Object )
                         Fields->None
                    INTERFACES:(class ClassA)
                    Interfaces-> 
                    INTERFACE -> Recursively Inspect
                    interface java.io.Serializable
                         CLASS
                         Class:  java.io.Serializable
                         INTERFACES:(interface java.io.Serializable)
                         Interfaces-> NONE
                         CONSTRUCTORS( interface java.io.Serializable )
                         Constructors->NONE
                         METHODS( interface java.io.Serializable )
                         Methods->None
                         FIELDS( interface java.io.Serializable )
                         Fields->None
                    Interfaces-> 
                    INTERFACE -> Recursively Inspect
                    interface java.lang.Runnable
                         CLASS
                         Class:  java.lang.Runnable
                         INTERFACES:(interface java.lang.Runnable)
                         Interfaces-> NONE
                         CONSTRUCTORS( interface java.lang.Runnable )
                         Constructors->NONE
                         METHODS( interface java.lang.Runnable )
                         Methods->
                          METHOD
                           Name:  run
                           Exceptions->NONE
                           Parameter types-> NONE
                           Return type:  void
                           Modifiers:  public abstract
                         FIELDS( interface java.lang.Runnable )
                         Fields->None
                    CONSTRUCTORS( class ClassA )
                    Constructors->
                     Constructors:  
                      Name:  ClassA
                      Exceptions-> None 
                      Parameter types: 
                      Modifiers:  public
                     Constructors:  
                      Name:  ClassA
                      Exceptions-> None 
                      Parameter types: 
                      int
                      Modifiers:  public
                    METHODS( class ClassA )
                    Methods->
                     METHOD
                      Name:  run
                      Exceptions->NONE
                      Parameter types-> NONE
                      Return type:  void
                      Modifiers:  public
                     METHOD
                      Name:  toString
                      Exceptions->NONE
                      Parameter types-> NONE
                      Return type:  class java.lang.String
                      Modifiers:  public
                     METHOD
                      Name:  printSomething
                      Exceptions->NONE
                      Parameter types-> NONE
                      Return type:  void
                      Modifiers:  private
                     METHOD
                      Name:  setVal
                      Exceptions->
                      class java.lang.Exception
                      Parameter types-> 
                      int
                      Return type:  void
                      Modifiers:  public
                     METHOD
                      Name:  getVal
                      Exceptions->NONE
                      Parameter types-> NONE
                      Return type:  int
                      Modifiers:  public
                    FIELDS( class ClassA )
                    Fields->
                     FIELD
                      Name:  val
                      Type:  int
                      Modifiers:  private
                      Value:  17
                     FIELD
                      Name:  val2
                      Type:  double
                      Modifiers:  private
                      Value:  0.2
                     FIELD
                      Name:  val3
                      Type:  boolean
                      Modifiers:  private
                      Value:  true
                FIELD
                 Name:  val2
                 Type:  class ClassA
                 Modifiers:  private static
                 Value:  null
                  -> Recursively inspect
                FIELD
                 Name:  val3
                 Type:  int
                 Modifiers:  private
                 Value:  34
                FIELD
                 Name:  vallarray
                 Type:  class [LClassA;
                 Modifiers:  private
                 Component Type:  class ClassA
                 Length:  10
                 Entries->
                 Value:  null
                 Value:  null
                 Value:  null
                 Value:  null
                 Value:  null
                 Value:  null
                 Value:  null
                 Value:  null
                 Value:  null
                 Value:  null
          INTERFACES:(class ClassC)
          Interfaces-> 
          INTERFACE -> Recursively Inspect
          interface InterfaceA
               CLASS
               Class:  InterfaceA
               INTERFACES:(interface InterfaceA)
               Interfaces-> 
               INTERFACE -> Recursively Inspect
               interface InterfaceB
                    CLASS
                    Class:  InterfaceB
                    INTERFACES:(interface InterfaceB)
                    Interfaces-> NONE
                    CONSTRUCTORS( interface InterfaceB )
                    Constructors->NONE
                    METHODS( interface InterfaceB )
                    Methods->
                     METHOD
                      Name:  func0
                      Exceptions->
                      class java.lang.Exception
                      Parameter types-> 
                      int
                      boolean
                      Return type:  void
                      Modifiers:  public abstract
                    FIELDS( interface InterfaceB )
                    Fields->None
               CONSTRUCTORS( interface InterfaceA )
               Constructors->NONE
               METHODS( interface InterfaceA )
               Methods->
                METHOD
                 Name:  func1
                 Exceptions->
                 class java.lang.Exception
                 Parameter types-> 
                 int
                 double
                 boolean
                 class java.lang.String
                 Return type:  void
                 Modifiers:  public abstract
                METHOD
                 Name:  func2
                 Exceptions->
                 class java.lang.Exception
                 class java.lang.ArithmeticException
                 class java.lang.IllegalMonitorStateException
                 Parameter types-> 
                 class java.lang.String
                 Return type:  int
                 Modifiers:  public abstract
               FIELDS( interface InterfaceA )
               Fields->None
          CONSTRUCTORS( class ClassC )
          Constructors->
           Constructors:  
            Name:  ClassC
            Exceptions-> None 
            Parameter types: 
            Modifiers:  public
           Constructors:  
            Name:  ClassC
            Exceptions-> None 
            Parameter types: 
            int
            int
            Modifiers:  public
          METHODS( class ClassC )
          Methods->
           METHOD
            Name:  run
            Exceptions->NONE
            Parameter types-> NONE
            Return type:  void
            Modifiers:  public
           METHOD
            Name:  toString
            Exceptions->NONE
            Parameter types-> NONE
            Return type:  class java.lang.String
            Modifiers:  public
           METHOD
            Name:  func3
            Exceptions->NONE
            Parameter types-> 
            int
            Return type:  void
            Modifiers:  public abstract
           METHOD
            Name:  func0
            Exceptions->
            class java.lang.Exception
            Parameter types-> 
            int
            boolean
            Return type:  void
            Modifiers:  public
           METHOD
            Name:  func1
            Exceptions->
            class java.lang.Exception
            Parameter types-> 
            int
            double
            boolean
            class java.lang.String
            Return type:  void
            Modifiers:  public
           METHOD
            Name:  func2
            Exceptions->
            class java.lang.Exception
            class java.lang.ArithmeticException
            class java.lang.IllegalMonitorStateException
            Parameter types-> 
            class java.lang.String
            Return type:  int
            Modifiers:  public
          FIELDS( class ClassC )
          Fields->
           FIELD
            Name:  val2
            Type:  class ClassA
            Modifiers:  private
            Value:  ClassA
             -> Recursively inspect
               CLASS
               Class:  ClassA
               SUPERCLASS -> Recursively Inspect
               SuperClass: java.lang.Object
                    CLASS
                    Class:  java.lang.Object
                    SuperClass: NONE
                    INTERFACES:(class java.lang.Object)
                    Interfaces-> NONE
                    CONSTRUCTORS( class java.lang.Object )
                    Constructors->
                     Constructors:  
                      Name:  java.lang.Object
                      Exceptions-> None 
                      Parameter types: 
                      Modifiers:  public
                    METHODS( class java.lang.Object )
                    Methods->
                     METHOD
                      Name:  finalize
                      Exceptions->
                      class java.lang.Throwable
                      Parameter types-> NONE
                      Return type:  void
                      Modifiers:  protected
                     METHOD
                      Name:  wait
                      Exceptions->
                      class java.lang.InterruptedException
                      Parameter types-> 
                      long
                      int
                      Return type:  void
                      Modifiers:  public final
                     METHOD
                      Name:  wait
                      Exceptions->
                      class java.lang.InterruptedException
                      Parameter types-> NONE
                      Return type:  void
                      Modifiers:  public final
                     METHOD
                      Name:  wait
                      Exceptions->
                      class java.lang.InterruptedException
                      Parameter types-> 
                      long
                      Return type:  void
                      Modifiers:  public final native
                     METHOD
                      Name:  equals
                      Exceptions->NONE
                      Parameter types-> 
                      class java.lang.Object
                      Return type:  boolean
                      Modifiers:  public
                     METHOD
                      Name:  toString
                      Exceptions->NONE
                      Parameter types-> NONE
                      Return type:  class java.lang.String
                      Modifiers:  public
                     METHOD
                      Name:  hashCode
                      Exceptions->NONE
                      Parameter types-> NONE
                      Return type:  int
                      Modifiers:  public native
                     METHOD
                      Name:  getClass
                      Exceptions->NONE
                      Parameter types-> NONE
                      Return type:  class java.lang.Class
                      Modifiers:  public final native
                     METHOD
                      Name:  clone
                      Exceptions->
                      class java.lang.CloneNotSupportedException
                      Parameter types-> NONE
                      Return type:  class java.lang.Object
                      Modifiers:  protected native
                     METHOD
                      Name:  notify
                      Exceptions->NONE
                      Parameter types-> NONE
                      Return type:  void
                      Modifiers:  public final native
                     METHOD
                      Name:  notifyAll
                      Exceptions->NONE
                      Parameter types-> NONE
                      Return type:  void
                      Modifiers:  public final native
                    FIELDS( class java.lang.Object )
                    Fields->None
               INTERFACES:(class ClassA)
               Interfaces-> 
               INTERFACE -> Recursively Inspect
               interface java.io.Serializable
                    CLASS
                    Class:  java.io.Serializable
                    INTERFACES:(interface java.io.Serializable)
                    Interfaces-> NONE
                    CONSTRUCTORS( interface java.io.Serializable )
                    Constructors->NONE
                    METHODS( interface java.io.Serializable )
                    Methods->None
                    FIELDS( interface java.io.Serializable )
                    Fields->None
               Interfaces-> 
               INTERFACE -> Recursively Inspect
               interface java.lang.Runnable
                    CLASS
                    Class:  java.lang.Runnable
                    INTERFACES:(interface java.lang.Runnable)
                    Interfaces-> NONE
                    CONSTRUCTORS( interface java.lang.Runnable )
                    Constructors->NONE
                    METHODS( interface java.lang.Runnable )
                    Methods->
                     METHOD
                      Name:  run
                      Exceptions->NONE
                      Parameter types-> NONE
                      Return type:  void
                      Modifiers:  public abstract
                    FIELDS( interface java.lang.Runnable )
                    Fields->None
               CONSTRUCTORS( class ClassA )
               Constructors->
                Constructors:  
                 Name:  ClassA
                 Exceptions-> None 
                 Parameter types: 
                 Modifiers:  public
                Constructors:  
                 Name:  ClassA
                 Exceptions-> None 
                 Parameter types: 
                 int
                 Modifiers:  public
               METHODS( class ClassA )
               Methods->
                METHOD
                 Name:  run
                 Exceptions->NONE
                 Parameter types-> NONE
                 Return type:  void
                 Modifiers:  public
                METHOD
                 Name:  toString
                 Exceptions->NONE
                 Parameter types-> NONE
                 Return type:  class java.lang.String
                 Modifiers:  public
                METHOD
                 Name:  printSomething
                 Exceptions->NONE
                 Parameter types-> NONE
                 Return type:  void
                 Modifiers:  private
                METHOD
                 Name:  setVal
                 Exceptions->
                 class java.lang.Exception
                 Parameter types-> 
                 int
                 Return type:  void
                 Modifiers:  public
                METHOD
                 Name:  getVal
                 Exceptions->NONE
                 Parameter types-> NONE
                 Return type:  int
                 Modifiers:  public
               FIELDS( class ClassA )
               Fields->
                FIELD
                 Name:  val
                 Type:  int
                 Modifiers:  private
                 Value:  100
                FIELD
                 Name:  val2
                 Type:  double
                 Modifiers:  private
                 Value:  0.2
                FIELD
                 Name:  val3
                 Type:  boolean
                 Modifiers:  private
                 Value:  true
           FIELD
            Name:  val3
            Type:  class ClassA
            Modifiers:  private
            Value:  ClassA
             -> Recursively inspect
               CLASS
               Class:  ClassA
               SUPERCLASS -> Recursively Inspect
               SuperClass: java.lang.Object
                    CLASS
                    Class:  java.lang.Object
                    SuperClass: NONE
                    INTERFACES:(class java.lang.Object)
                    Interfaces-> NONE
                    CONSTRUCTORS( class java.lang.Object )
                    Constructors->
                     Constructors:  
                      Name:  java.lang.Object
                      Exceptions-> None 
                      Parameter types: 
                      Modifiers:  public
                    METHODS( class java.lang.Object )
                    Methods->
                     METHOD
                      Name:  finalize
                      Exceptions->
                      class java.lang.Throwable
                      Parameter types-> NONE
                      Return type:  void
                      Modifiers:  protected
                     METHOD
                      Name:  wait
                      Exceptions->
                      class java.lang.InterruptedException
                      Parameter types-> 
                      long
                      int
                      Return type:  void
                      Modifiers:  public final
                     METHOD
                      Name:  wait
                      Exceptions->
                      class java.lang.InterruptedException
                      Parameter types-> NONE
                      Return type:  void
                      Modifiers:  public final
                     METHOD
                      Name:  wait
                      Exceptions->
                      class java.lang.InterruptedException
                      Parameter types-> 
                      long
                      Return type:  void
                      Modifiers:  public final native
                     METHOD
                      Name:  equals
                      Exceptions->NONE
                      Parameter types-> 
                      class java.lang.Object
                      Return type:  boolean
                      Modifiers:  public
                     METHOD
                      Name:  toString
                      Exceptions->NONE
                      Parameter types-> NONE
                      Return type:  class java.lang.String
                      Modifiers:  public
                     METHOD
                      Name:  hashCode
                      Exceptions->NONE
                      Parameter types-> NONE
                      Return type:  int
                      Modifiers:  public native
                     METHOD
                      Name:  getClass
                      Exceptions->NONE
                      Parameter types-> NONE
                      Return type:  class java.lang.Class
                      Modifiers:  public final native
                     METHOD
                      Name:  clone
                      Exceptions->
                      class java.lang.CloneNotSupportedException
                      Parameter types-> NONE
                      Return type:  class java.lang.Object
                      Modifiers:  protected native
                     METHOD
                      Name:  notify
                      Exceptions->NONE
                      Parameter types-> NONE
                      Return type:  void
                      Modifiers:  public final native
                     METHOD
                      Name:  notifyAll
                      Exceptions->NONE
                      Parameter types-> NONE
                      Return type:  void
                      Modifiers:  public final native
                    FIELDS( class java.lang.Object )
                    Fields->None
               INTERFACES:(class ClassA)
               Interfaces-> 
               INTERFACE -> Recursively Inspect
               interface java.io.Serializable
                    CLASS
                    Class:  java.io.Serializable
                    INTERFACES:(interface java.io.Serializable)
                    Interfaces-> NONE
                    CONSTRUCTORS( interface java.io.Serializable )
                    Constructors->NONE
                    METHODS( interface java.io.Serializable )
                    Methods->None
                    FIELDS( interface java.io.Serializable )
                    Fields->None
               Interfaces-> 
               INTERFACE -> Recursively Inspect
               interface java.lang.Runnable
                    CLASS
                    Class:  java.lang.Runnable
                    INTERFACES:(interface java.lang.Runnable)
                    Interfaces-> NONE
                    CONSTRUCTORS( interface java.lang.Runnable )
                    Constructors->NONE
                    METHODS( interface java.lang.Runnable )
                    Methods->
                     METHOD
                      Name:  run
                      Exceptions->NONE
                      Parameter types-> NONE
                      Return type:  void
                      Modifiers:  public abstract
                    FIELDS( interface java.lang.Runnable )
                    Fields->None
               CONSTRUCTORS( class ClassA )
               Constructors->
                Constructors:  
                 Name:  ClassA
                 Exceptions-> None 
                 Parameter types: 
                 Modifiers:  public
                Constructors:  
                 Name:  ClassA
                 Exceptions-> None 
                 Parameter types: 
                 int
                 Modifiers:  public
               METHODS( class ClassA )
               Methods->
                METHOD
                 Name:  run
                 Exceptions->NONE
                 Parameter types-> NONE
                 Return type:  void
                 Modifiers:  public
                METHOD
                 Name:  toString
                 Exceptions->NONE
                 Parameter types-> NONE
                 Return type:  class java.lang.String
                 Modifiers:  public
                METHOD
                 Name:  printSomething
                 Exceptions->NONE
                 Parameter types-> NONE
                 Return type:  void
                 Modifiers:  private
                METHOD
                 Name:  setVal
                 Exceptions->
                 class java.lang.Exception
                 Parameter types-> 
                 int
                 Return type:  void
                 Modifiers:  public
                METHOD
                 Name:  getVal
                 Exceptions->NONE
                 Parameter types-> NONE
                 Return type:  int
                 Modifiers:  public
               FIELDS( class ClassA )
               Fields->
                FIELD
                 Name:  val
                 Type:  int
                 Modifiers:  private
                 Value:  2
                FIELD
                 Name:  val2
                 Type:  double
                 Modifiers:  private
                 Value:  0.2
                FIELD
                 Name:  val3
                 Type:  boolean
                 Modifiers:  private
                 Value:  true
           FIELD
            Name:  val4
            Type:  class ClassA
            Modifiers:  private
            Value:  ClassA
             -> Recursively inspect
               CLASS
               Class:  ClassA
               SUPERCLASS -> Recursively Inspect
               SuperClass: java.lang.Object
                    CLASS
                    Class:  java.lang.Object
                    SuperClass: NONE
                    INTERFACES:(class java.lang.Object)
                    Interfaces-> NONE
                    CONSTRUCTORS( class java.lang.Object )
                    Constructors->
                     Constructors:  
                      Name:  java.lang.Object
                      Exceptions-> None 
                      Parameter types: 
                      Modifiers:  public
                    METHODS( class java.lang.Object )
                    Methods->
                     METHOD
                      Name:  finalize
                      Exceptions->
                      class java.lang.Throwable
                      Parameter types-> NONE
                      Return type:  void
                      Modifiers:  protected
                     METHOD
                      Name:  wait
                      Exceptions->
                      class java.lang.InterruptedException
                      Parameter types-> 
                      long
                      int
                      Return type:  void
                      Modifiers:  public final
                     METHOD
                      Name:  wait
                      Exceptions->
                      class java.lang.InterruptedException
                      Parameter types-> NONE
                      Return type:  void
                      Modifiers:  public final
                     METHOD
                      Name:  wait
                      Exceptions->
                      class java.lang.InterruptedException
                      Parameter types-> 
                      long
                      Return type:  void
                      Modifiers:  public final native
                     METHOD
                      Name:  equals
                      Exceptions->NONE
                      Parameter types-> 
                      class java.lang.Object
                      Return type:  boolean
                      Modifiers:  public
                     METHOD
                      Name:  toString
                      Exceptions->NONE
                      Parameter types-> NONE
                      Return type:  class java.lang.String
                      Modifiers:  public
                     METHOD
                      Name:  hashCode
                      Exceptions->NONE
                      Parameter types-> NONE
                      Return type:  int
                      Modifiers:  public native
                     METHOD
                      Name:  getClass
                      Exceptions->NONE
                      Parameter types-> NONE
                      Return type:  class java.lang.Class
                      Modifiers:  public final native
                     METHOD
                      Name:  clone
                      Exceptions->
                      class java.lang.CloneNotSupportedException
                      Parameter types-> NONE
                      Return type:  class java.lang.Object
                      Modifiers:  protected native
                     METHOD
                      Name:  notify
                      Exceptions->NONE
                      Parameter types-> NONE
                      Return type:  void
                      Modifiers:  public final native
                     METHOD
                      Name:  notifyAll
                      Exceptions->NONE
                      Parameter types-> NONE
                      Return type:  void
                      Modifiers:  public final native
                    FIELDS( class java.lang.Object )
                    Fields->None
               INTERFACES:(class ClassA)
               Interfaces-> 
               INTERFACE -> Recursively Inspect
               interface java.io.Serializable
                    CLASS
                    Class:  java.io.Serializable
                    INTERFACES:(interface java.io.Serializable)
                    Interfaces-> NONE
                    CONSTRUCTORS( interface java.io.Serializable )
                    Constructors->NONE
                    METHODS( interface java.io.Serializable )
                    Methods->None
                    FIELDS( interface java.io.Serializable )
                    Fields->None
               Interfaces-> 
               INTERFACE -> Recursively Inspect
               interface java.lang.Runnable
                    CLASS
                    Class:  java.lang.Runnable
                    INTERFACES:(interface java.lang.Runnable)
                    Interfaces-> NONE
                    CONSTRUCTORS( interface java.lang.Runnable )
                    Constructors->NONE
                    METHODS( interface java.lang.Runnable )
                    Methods->
                     METHOD
                      Name:  run
                      Exceptions->NONE
                      Parameter types-> NONE
                      Return type:  void
                      Modifiers:  public abstract
                    FIELDS( interface java.lang.Runnable )
                    Fields->None
               CONSTRUCTORS( class ClassA )
               Constructors->
                Constructors:  
                 Name:  ClassA
                 Exceptions-> None 
                 Parameter types: 
                 Modifiers:  public
                Constructors:  
                 Name:  ClassA
                 Exceptions-> None 
                 Parameter types: 
                 int
                 Modifiers:  public
               METHODS( class ClassA )
               Methods->
                METHOD
                 Name:  run
                 Exceptions->NONE
                 Parameter types-> NONE
                 Return type:  void
                 Modifiers:  public
                METHOD
                 Name:  toString
                 Exceptions->NONE
                 Parameter types-> NONE
                 Return type:  class java.lang.String
                 Modifiers:  public
                METHOD
                 Name:  printSomething
                 Exceptions->NONE
                 Parameter types-> NONE
                 Return type:  void
                 Modifiers:  private
                METHOD
                 Name:  setVal
                 Exceptions->
                 class java.lang.Exception
                 Parameter types-> 
                 int
                 Return type:  void
                 Modifiers:  public
                METHOD
                 Name:  getVal
                 Exceptions->NONE
                 Parameter types-> NONE
                 Return type:  int
                 Modifiers:  public
               FIELDS( class ClassA )
               Fields->
                FIELD
                 Name:  val
                 Type:  int
                 Modifiers:  private
                 Value:  3
                FIELD
                 Name:  val2
                 Type:  double
                 Modifiers:  private
                 Value:  0.2
                FIELD
                 Name:  val3
                 Type:  boolean
                 Modifiers:  private
                 Value:  true
     INTERFACES:(class ClassB)
     Interfaces-> 
     INTERFACE -> Recursively Inspect
     interface java.lang.Runnable
          CLASS
          Class:  java.lang.Runnable
          INTERFACES:(interface java.lang.Runnable)
          Interfaces-> NONE
          CONSTRUCTORS( interface java.lang.Runnable )
          Constructors->NONE
          METHODS( interface java.lang.Runnable )
          Methods->
           METHOD
            Name:  run
            Exceptions->NONE
            Parameter types-> NONE
            Return type:  void
            Modifiers:  public abstract
          FIELDS( interface java.lang.Runnable )
          Fields->None
     CONSTRUCTORS( class ClassB )
     Constructors->
      Constructors:  
       Name:  ClassB
       Exceptions:  class java.lang.Exception
       Parameter types: 
       Modifiers:  public
     METHODS( class ClassB )
     Methods->
      METHOD
       Name:  run
       Exceptions->NONE
       Parameter types-> NONE
       Return type:  void
       Modifiers:  public
      METHOD
       Name:  toString
       Exceptions->NONE
       Parameter types-> NONE
       Return type:  class java.lang.String
       Modifiers:  public
      METHOD
       Name:  func3
       Exceptions->NONE
       Parameter types-> 
       int
       Return type:  void
       Modifiers:  public
     FIELDS( class ClassB )
     Fields->
      FIELD
       Name:  val
       Type:  class ClassA
       Modifiers:  private
       Value:  ClassA
        -> Recursively inspect
          CLASS
          Class:  ClassA
          SUPERCLASS -> Recursively Inspect
          SuperClass: java.lang.Object
               CLASS
               Class:  java.lang.Object
               SuperClass: NONE
               INTERFACES:(class java.lang.Object)
               Interfaces-> NONE
               CONSTRUCTORS( class java.lang.Object )
               Constructors->
                Constructors:  
                 Name:  java.lang.Object
                 Exceptions-> None 
                 Parameter types: 
                 Modifiers:  public
               METHODS( class java.lang.Object )
               Methods->
                METHOD
                 Name:  finalize
                 Exceptions->
                 class java.lang.Throwable
                 Parameter types-> NONE
                 Return type:  void
                 Modifiers:  protected
                METHOD
                 Name:  wait
                 Exceptions->
                 class java.lang.InterruptedException
                 Parameter types-> 
                 long
                 int
                 Return type:  void
                 Modifiers:  public final
                METHOD
                 Name:  wait
                 Exceptions->
                 class java.lang.InterruptedException
                 Parameter types-> NONE
                 Return type:  void
                 Modifiers:  public final
                METHOD
                 Name:  wait
                 Exceptions->
                 class java.lang.InterruptedException
                 Parameter types-> 
                 long
                 Return type:  void
                 Modifiers:  public final native
                METHOD
                 Name:  equals
                 Exceptions->NONE
                 Parameter types-> 
                 class java.lang.Object
                 Return type:  boolean
                 Modifiers:  public
                METHOD
                 Name:  toString
                 Exceptions->NONE
                 Parameter types-> NONE
                 Return type:  class java.lang.String
                 Modifiers:  public
                METHOD
                 Name:  hashCode
                 Exceptions->NONE
                 Parameter types-> NONE
                 Return type:  int
                 Modifiers:  public native
                METHOD
                 Name:  getClass
                 Exceptions->NONE
                 Parameter types-> NONE
                 Return type:  class java.lang.Class
                 Modifiers:  public final native
                METHOD
                 Name:  clone
                 Exceptions->
                 class java.lang.CloneNotSupportedException
                 Parameter types-> NONE
                 Return type:  class java.lang.Object
                 Modifiers:  protected native
                METHOD
                 Name:  notify
                 Exceptions->NONE
                 Parameter types-> NONE
                 Return type:  void
                 Modifiers:  public final native
                METHOD
                 Name:  notifyAll
                 Exceptions->NONE
                 Parameter types-> NONE
                 Return type:  void
                 Modifiers:  public final native
               FIELDS( class java.lang.Object )
               Fields->None
          INTERFACES:(class ClassA)
          Interfaces-> 
          INTERFACE -> Recursively Inspect
          interface java.io.Serializable
               CLASS
               Class:  java.io.Serializable
               INTERFACES:(interface java.io.Serializable)
               Interfaces-> NONE
               CONSTRUCTORS( interface java.io.Serializable )
               Constructors->NONE
               METHODS( interface java.io.Serializable )
               Methods->None
               FIELDS( interface java.io.Serializable )
               Fields->None
          Interfaces-> 
          INTERFACE -> Recursively Inspect
          interface java.lang.Runnable
               CLASS
               Class:  java.lang.Runnable
               INTERFACES:(interface java.lang.Runnable)
               Interfaces-> NONE
               CONSTRUCTORS( interface java.lang.Runnable )
               Constructors->NONE
               METHODS( interface java.lang.Runnable )
               Methods->
                METHOD
                 Name:  run
                 Exceptions->NONE
                 Parameter types-> NONE
                 Return type:  void
                 Modifiers:  public abstract
               FIELDS( interface java.lang.Runnable )
               Fields->None
          CONSTRUCTORS( class ClassA )
          Constructors->
           Constructors:  
            Name:  ClassA
            Exceptions-> None 
            Parameter types: 
            Modifiers:  public
           Constructors:  
            Name:  ClassA
            Exceptions-> None 
            Parameter types: 
            int
            Modifiers:  public
          METHODS( class ClassA )
          Methods->
           METHOD
            Name:  run
            Exceptions->NONE
            Parameter types-> NONE
            Return type:  void
            Modifiers:  public
           METHOD
            Name:  toString
            Exceptions->NONE
            Parameter types-> NONE
            Return type:  class java.lang.String
            Modifiers:  public
           METHOD
            Name:  printSomething
            Exceptions->NONE
            Parameter types-> NONE
            Return type:  void
            Modifiers:  private
           METHOD
            Name:  setVal
            Exceptions->
            class java.lang.Exception
            Parameter types-> 
            int
            Return type:  void
            Modifiers:  public
           METHOD
            Name:  getVal
            Exceptions->NONE
            Parameter types-> NONE
            Return type:  int
            Modifiers:  public
          FIELDS( class ClassA )
          Fields->
           FIELD
            Name:  val
            Type:  int
            Modifiers:  private
            Value:  3
           FIELD
            Name:  val2
            Type:  double
            Modifiers:  private
            Value:  0.2
           FIELD
            Name:  val3
            Type:  boolean
            Modifiers:  private
            Value:  true
      FIELD
       Name:  val2
       Type:  class ClassA
       Modifiers:  private
       Value:  ClassA
        -> Recursively inspect
          CLASS
          Class:  ClassA
          SUPERCLASS -> Recursively Inspect
          SuperClass: java.lang.Object
               CLASS
               Class:  java.lang.Object
               SuperClass: NONE
               INTERFACES:(class java.lang.Object)
               Interfaces-> NONE
               CONSTRUCTORS( class java.lang.Object )
               Constructors->
                Constructors:  
                 Name:  java.lang.Object
                 Exceptions-> None 
                 Parameter types: 
                 Modifiers:  public
               METHODS( class java.lang.Object )
               Methods->
                METHOD
                 Name:  finalize
                 Exceptions->
                 class java.lang.Throwable
                 Parameter types-> NONE
                 Return type:  void
                 Modifiers:  protected
                METHOD
                 Name:  wait
                 Exceptions->
                 class java.lang.InterruptedException
                 Parameter types-> 
                 long
                 int
                 Return type:  void
                 Modifiers:  public final
                METHOD
                 Name:  wait
                 Exceptions->
                 class java.lang.InterruptedException
                 Parameter types-> NONE
                 Return type:  void
                 Modifiers:  public final
                METHOD
                 Name:  wait
                 Exceptions->
                 class java.lang.InterruptedException
                 Parameter types-> 
                 long
                 Return type:  void
                 Modifiers:  public final native
                METHOD
                 Name:  equals
                 Exceptions->NONE
                 Parameter types-> 
                 class java.lang.Object
                 Return type:  boolean
                 Modifiers:  public
                METHOD
                 Name:  toString
                 Exceptions->NONE
                 Parameter types-> NONE
                 Return type:  class java.lang.String
                 Modifiers:  public
                METHOD
                 Name:  hashCode
                 Exceptions->NONE
                 Parameter types-> NONE
                 Return type:  int
                 Modifiers:  public native
                METHOD
                 Name:  getClass
                 Exceptions->NONE
                 Parameter types-> NONE
                 Return type:  class java.lang.Class
                 Modifiers:  public final native
                METHOD
                 Name:  clone
                 Exceptions->
                 class java.lang.CloneNotSupportedException
                 Parameter types-> NONE
                 Return type:  class java.lang.Object
                 Modifiers:  protected native
                METHOD
                 Name:  notify
                 Exceptions->NONE
                 Parameter types-> NONE
                 Return type:  void
                 Modifiers:  public final native
                METHOD
                 Name:  notifyAll
                 Exceptions->NONE
                 Parameter types-> NONE
                 Return type:  void
                 Modifiers:  public final native
               FIELDS( class java.lang.Object )
               Fields->None
          INTERFACES:(class ClassA)
          Interfaces-> 
          INTERFACE -> Recursively Inspect
          interface java.io.Serializable
               CLASS
               Class:  java.io.Serializable
               INTERFACES:(interface java.io.Serializable)
               Interfaces-> NONE
               CONSTRUCTORS( interface java.io.Serializable )
               Constructors->NONE
               METHODS( interface java.io.Serializable )
               Methods->None
               FIELDS( interface java.io.Serializable )
               Fields->None
          Interfaces-> 
          INTERFACE -> Recursively Inspect
          interface java.lang.Runnable
               CLASS
               Class:  java.lang.Runnable
               INTERFACES:(interface java.lang.Runnable)
               Interfaces-> NONE
               CONSTRUCTORS( interface java.lang.Runnable )
               Constructors->NONE
               METHODS( interface java.lang.Runnable )
               Methods->
                METHOD
                 Name:  run
                 Exceptions->NONE
                 Parameter types-> NONE
                 Return type:  void
                 Modifiers:  public abstract
               FIELDS( interface java.lang.Runnable )
               Fields->None
          CONSTRUCTORS( class ClassA )
          Constructors->
           Constructors:  
            Name:  ClassA
            Exceptions-> None 
            Parameter types: 
            Modifiers:  public
           Constructors:  
            Name:  ClassA
            Exceptions-> None 
            Parameter types: 
            int
            Modifiers:  public
          METHODS( class ClassA )
          Methods->
           METHOD
            Name:  run
            Exceptions->NONE
            Parameter types-> NONE
            Return type:  void
            Modifiers:  public
           METHOD
            Name:  toString
            Exceptions->NONE
            Parameter types-> NONE
            Return type:  class java.lang.String
            Modifiers:  public
           METHOD
            Name:  printSomething
            Exceptions->NONE
            Parameter types-> NONE
            Return type:  void
            Modifiers:  private
           METHOD
            Name:  setVal
            Exceptions->
            class java.lang.Exception
            Parameter types-> 
            int
            Return type:  void
            Modifiers:  public
           METHOD
            Name:  getVal
            Exceptions->NONE
            Parameter types-> NONE
            Return type:  int
            Modifiers:  public
          FIELDS( class ClassA )
          Fields->
           FIELD
            Name:  val
            Type:  int
            Modifiers:  private
            Value:  12
           FIELD
            Name:  val2
            Type:  double
            Modifiers:  private
            Value:  0.2
           FIELD
            Name:  val3
            Type:  boolean
            Modifiers:  private
            Value:  true
      FIELD
       Name:  val3
       Type:  class ClassA
       Modifiers:  private
       Value:  null
        -> Recursively inspect
 CLASS
 Class:  [LClassB;
 SUPERCLASS -> Recursively Inspect
 SuperClass: java.lang.Object
      CLASS
      Class:  java.lang.Object
      SuperClass: NONE
      INTERFACES:(class java.lang.Object)
      Interfaces-> NONE
      CONSTRUCTORS( class java.lang.Object )
      Constructors->
       Constructors:  
        Name:  java.lang.Object
        Exceptions-> None 
        Parameter types: 
        Modifiers:  public
      METHODS( class java.lang.Object )
      Methods->
       METHOD
        Name:  finalize
        Exceptions->
        class java.lang.Throwable
        Parameter types-> NONE
        Return type:  void
        Modifiers:  protected
       METHOD
        Name:  wait
        Exceptions->
        class java.lang.InterruptedException
        Parameter types-> 
        long
        int
        Return type:  void
        Modifiers:  public final
       METHOD
        Name:  wait
        Exceptions->
        class java.lang.InterruptedException
        Parameter types-> NONE
        Return type:  void
        Modifiers:  public final
       METHOD
        Name:  wait
        Exceptions->
        class java.lang.InterruptedException
        Parameter types-> 
        long
        Return type:  void
        Modifiers:  public final native
       METHOD
        Name:  equals
        Exceptions->NONE
        Parameter types-> 
        class java.lang.Object
        Return type:  boolean
        Modifiers:  public
       METHOD
        Name:  toString
        Exceptions->NONE
        Parameter types-> NONE
        Return type:  class java.lang.String
        Modifiers:  public
       METHOD
        Name:  hashCode
        Exceptions->NONE
        Parameter types-> NONE
        Return type:  int
        Modifiers:  public native
       METHOD
        Name:  getClass
        Exceptions->NONE
        Parameter types-> NONE
        Return type:  class java.lang.Class
        Modifiers:  public final native
       METHOD
        Name:  clone
        Exceptions->
        class java.lang.CloneNotSupportedException
        Parameter types-> NONE
        Return type:  class java.lang.Object
        Modifiers:  protected native
       METHOD
        Name:  notify
        Exceptions->NONE
        Parameter types-> NONE
        Return type:  void
        Modifiers:  public final native
       METHOD
        Name:  notifyAll
        Exceptions->NONE
        Parameter types-> NONE
        Return type:  void
        Modifiers:  public final native
      FIELDS( class java.lang.Object )
      Fields->None
 INTERFACES:(class [LClassB;)
 Interfaces-> 
 INTERFACE -> Recursively Inspect
 interface java.lang.Cloneable
      CLASS
      Class:  java.lang.Cloneable
      INTERFACES:(interface java.lang.Cloneable)
      Interfaces-> NONE
      CONSTRUCTORS( interface java.lang.Cloneable )
      Constructors->NONE
      METHODS( interface java.lang.Cloneable )
      Methods->None
      FIELDS( interface java.lang.Cloneable )
      Fields->None
 Interfaces-> 
 INTERFACE -> Recursively Inspect
 interface java.io.Serializable
      CLASS
      Class:  java.io.Serializable
      INTERFACES:(interface java.io.Serializable)
      Interfaces-> NONE
      CONSTRUCTORS( interface java.io.Serializable )
      Constructors->NONE
      METHODS( interface java.io.Serializable )
      Methods->None
      FIELDS( interface java.io.Serializable )
      Fields->None
 CONSTRUCTORS( class [LClassB; )
 Constructors->NONE
 METHODS( class [LClassB; )
 Methods->None
 FIELDS( class [LClassB; )
 Fields->None
======================================================
